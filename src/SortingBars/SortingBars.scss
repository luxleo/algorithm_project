@mixin animation(
	$name,
	$duration,
	$timing-funtion,
	$delay,
	$direction,
	$iteration-count,
	$fill-mode,
	$play-state
) {
	animation-name: $name;
	animation-duration: $duration;
	animation-timing-function: $timing-funtion;
	animation-delay: $delay;
	animation-direction: $direction;
	animation-iteration-count: $iteration-count;
	animation-fill-mode: $fill-mode;
	animation-play-state: $play-state;
}
@mixin keyframe($animation-name) {
	@keyframes #{$animation-name} {
		@content;
	}
}
@include keyframe(sortedAnimation) {
	0% {
		background-color: rgb(219, 219, 219);
	}
	5% {
		transform: scale(0.4);
		background-color: rgb(200, 32, 20);
		border-radius: 100%;
	}
	50% {
		background-color: rgb(207, 128, 63);
	}
	75% {
		transform: scale(1.1);
		background-color: rgb(228, 216, 107);
	}
	100% {
		transform: scale(1);
		background-color: rgb(246, 198, 135);
	}
}
.grid {
	display: grid;
	grid-template-columns: 1fr 2fr 1fr;
	grid-template-rows: repeat(4, 1fr);
	.result1 {
		grid-column: 3/4;
		grid-row: 1;
		display: flex;
		align-items: center;
		justify-content: center;
		p {
			font-size: 2rem;
			text-align: end;
		}
	}
	.result2 {
		grid-column: 3/4;
		grid-row: 3;
		display: flex;
		align-items: center;
		justify-content: center;
		p {
			font-size: 2rem;
			text-align: end;
		}
	}
	.control1 {
		grid-column: 3/4;
		grid-row: 2;
	}
	.control2 {
		grid-column: 3/4;
		grid-row: 4;
	}
}
.container {
	margin: 10px auto;
	display: flex;
	justify-content: center;
	flex-direction: row;
	grid-column: 2/3;
	grid-row: 1 / span 2;
}
.container2 {
	margin: 10px auto;
	display: flex;
	justify-content: center;
	flex-direction: row;
	grid-column: 2/3;
	grid-row: 3 / span 2;
}
.bar {
	width: 2px;
	display: inline-block;
	margin: 0 1px;
	&.bar-completed {
		@include animation(
			sortedAnimation,
			1s,
			ease-out,
			0,
			alternate,
			2,
			forwards,
			running
		);
	}
}
